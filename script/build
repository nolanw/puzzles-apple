#!/bin/sh
set -e

root="$(CDPATH= cd -- "$(dirname -- "$0")"/.. && pwd)"
cd "$root"

job_count="$(sysctl -n hw.logicalcpu)"
scratch="$root"/scratch

build_halibut() {
    halibut_scratch="$scratch"/halibut &&
    mkdir -p "$halibut_scratch" &&
    cd "$halibut_scratch" &&
    echo "Configuring halibut…" &&
    cmake ../../halibut &&
    echo "Building halibut…" &&
    cmake --build . --config Release --parallel "$job_count"
}

build_puzzles() {
    puzzles_scratch="$scratch"/puzzles &&
    mkdir -p "$puzzles_scratch" &&
    cd "$puzzles_scratch" &&
    echo "Configuring puzzles…" &&
    cmake "$root"/puzzles -DCMAKE_PROGRAM_PATH="$halibut_scratch" &&
    echo "Building puzzles…" &&
    cmake --build . --config Release --parallel "$job_count" &&
    puzzles_app="$puzzles_scratch"/Puzzles.app
}

check_vars() {
    local missing=
    while read varname; do
        local tmp
        eval tmp=\$$varname
        [ "$tmp" ] || missing="$missing
    $varname"
    done <<'VARLIST'
        MAC_BUNDLE_IDENTIFIER
        MAC_CODESIGN_CERT_NAME
        NOTARY_APPLE_ID
        NOTARY_KEYCHAIN_PROFILE
        NOTARY_TEAM_ID
VARLIST
    [ -z "$missing" ] || die "Missing env vars (see README.md for explanation):$missing"
    : ${MAC_VERSION:="$("$root"/script/version)"}
}

die() {
    printf "%s\n" "$*" >&2
    exit 1
}

notarize_and_staple() {
    echo "Submitting $puzzles_dmg for notarization…" &&
    xcrun notarytool submit \
        --apple-id "$NOTARY_APPLE_ID" \
        --team-id "$NOTARY_TEAM_ID" \
        --keychain-profile "$NOTARY_KEYCHAIN_PROFILE" \
        --verbose \
        --wait \
        "$puzzles_dmg" &&
    echo "Stapling ${puzzles_dmg}…" &&
    xcrun stapler staple "$puzzles_dmg"
}

package_for_distribution() {
    echo "Packaging $puzzles_app for distribution…" &&
    cd "$puzzles_scratch" &&
    make -j"$job_count" package &&
    puzzles_dmg="$puzzles_scratch"/Puzzles.dmg
}

set_info_plist_values() {
    local info_plist="$puzzles_app"/Contents/Info.plist &&
    echo "Setting Info.plist values…" &&
    /usr/libexec/PlistBuddy -c \
        "Set :CFBundleIdentifier $MAC_BUNDLE_IDENTIFIER" \
        "$info_plist" &&
    /usr/libexec/PlistBuddy -c \
        "Set :CFBundleVersion $MAC_VERSION" \
        "$info_plist" &&
    /usr/libexec/PlistBuddy -c \
        "Set :CFBundleShortVersionString $version" \
        "$info_plist"
}

sign() {
    echo "Signing ${puzzles_app}…" &&
    /usr/bin/codesign \
        --force \
        --sign "$MAC_CODESIGN_CERT_NAME" \
        --options runtime \
        --verbose \
        "$puzzles_app"
}

check_vars &&
build_halibut &&
build_puzzles &&
set_info_plist_values &&
sign &&
package_for_distribution &&
notarize_and_staple &&
echo "$puzzles_dmg"
